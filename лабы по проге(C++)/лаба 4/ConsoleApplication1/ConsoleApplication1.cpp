//Написать простой консольный вариант карточной игры BlackJack для игры один - наодин с дилером, в соответствии с вариантом.В приложении А приведены вариации и
//особенности правил игры для каждого варианта.В ходе работы необходимо сделать
//как минимум следующее :
// создать и связать отношением агрегации / композиции и / или наследования классы
//КАРТА, КОЛОДА, ДИЛЕР, ИГРОК, ИГРА.В целом, Вы можете предлагать здесь
//свои варианты объектно - ориентированного проектирования;
// в начале игры генерировать случайным образом 4 колоды с 36 или 52 картами, в
//зависимости от варианта;
// имитировать действия дилера, в соответствии с вариантом игры;
// запрограммировать обработку всех потенциально возможных вариантов исхода :
//блек - джек, перебор, ровно, выигрыш по очкам, проигрыш по очкам;
// бросать и отлавливать исключение при «переборе»(«перебор» рассматривать как
//    исключительную ситуацию);
// перегрузить операцию потокового вывода объекта класса карты на экран с
//помощью дружественной функции.Выводить карту в виде 2♠, Q♦ и т.д. (символы
//    карточных мастей имеют ASCII - коды 3, 4, 5, 6 и UNICODE - коды "\u2665",
//    "\u2666", "\u2663", "\u2660", соответственно).

//Вариант 4: МАКСИМУМ КАРТ; Европейский; surrender;


// Максимум карт.  Игрокам и банкомету позволяется иметь на руке не более 5 карт.

//Европейский: дилер берёт вторую карту после того, как все игроки закончат набор. 
//В случае, если у дилера блек-джек, то игрокам возвращаются все дополнительные ставки (кроме «страховки»)
// 
// surrender: Общий принцип действия surrender заключается в том, что после получения двух карт вы можете отказаться от 
//продолжения дальнейшей игры. Дилер заберет ваши карты и половину ставки.

#include"Game.h"

int main()
{
	Game g;
}

